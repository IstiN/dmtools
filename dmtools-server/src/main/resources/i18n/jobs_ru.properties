# Названия и описания заданий
job.teammate.displayName=AI Помощник Teammate
job.teammate.description=Специализированный AI-помощник с предконфигурированными ролями и инструкциями для целенаправленной помощи без сложной оркестрации поиска.

job.expert.displayName=AI Экспертный Анализ
job.expert.description=Используйте экспертизу AI для анализа тикетов, предоставления технических рекомендаций и генерации детальных выводов на основе контекста проекта и требований.

# Параметры задания Teammate
teammate.inputJql.displayName=Запрос Тикетов (JQL)
teammate.inputJql.description=JQL запрос для выбора тикетов для обработки. Используйте язык запросов Jira для фильтрации тикетов по проекту, типу, статусу и т.д.
teammate.inputJql.instructions=Введите валидный JQL запрос для фильтрации тикетов. Примеры: 'key = DMC-123', 'project = DMC AND assignee = currentUser()', 'status = "In Progress" AND created >= -7d'

teammate.initiator.displayName=ID Инициатора
teammate.initiator.description=ID пользователя или email человека, запрашивающего помощь. Используется для уведомлений и отслеживания.
teammate.initiator.instructions=Введите email адрес или ID пользователя, который будет получать уведомления о выполнении задания.

teammate.agentParams.aiRole.displayName=Роль AI
teammate.agentParams.aiRole.description=Определите роль AI и область экспертизы. Это задает контекст того, как AI будет подходить к задачам и отвечать на них.
teammate.agentParams.aiRole.instructions=Четко опишите роль AI, включая области экспертизы и ответственности. Пример: 'Старший код-ревьювер с экспертизой в Java и практиках безопасности'

teammate.agentParams.instructions.displayName=Инструкции
teammate.agentParams.instructions.description=Конкретные инструкции для AI-помощника. Предоставьте четкие указания на чем AI должен сосредоточиться. Может включать URL Confluence для переиспользуемых шаблонов инструкций.
teammate.agentParams.instructions.instructions=Предоставьте четкие, конкретные инструкции для AI. Вы можете использовать несколько инструкций и включать URL Confluence для шаблонов.

teammate.agentParams.formattingRules.displayName=Правила Форматирования
teammate.agentParams.formattingRules.description=Рекомендации по форматированию ответов AI. Может быть URL Confluence для стандартизированных шаблонов форматирования.
teammate.agentParams.formattingRules.instructions=Укажите, как AI должен форматировать свои ответы. Включите детали о структуре, стиле и любых конкретных требованиях к форматированию.

teammate.agentParams.fewShots.displayName=Примеры
teammate.agentParams.fewShots.description=Примеры ответов для направления поведения AI и обеспечения консистентного качества вывода. Может быть URL Confluence для библиотеки примеров.
teammate.agentParams.fewShots.instructions=Предоставьте примеры хороших ответов, чтобы помочь AI понять ваши ожидания и поддерживать консистентность.

teammate.agentParams.knownInfo.displayName=Известная Информация
teammate.agentParams.knownInfo.description=Контекст и фоновая информация, о которой AI должен знать. Может быть URL Confluence для документации проекта.
teammate.agentParams.knownInfo.instructions=Поделитесь релевантным контекстом и фоновой информацией, которая поможет AI предоставить лучшую помощь.

teammate.ticketContextDepth.displayName=Глубина Контекста Тикета
teammate.ticketContextDepth.description=Как глубоко проходить по связям тикетов для сбора контекста
teammate.ticketContextDepth.instructions=Установите, сколько уровней связанных тикетов включить в контекст. Большие значения дают больше контекста, но могут замедлить обработку.

teammate.chunkProcessingTimeoutInMinutes.displayName=Таймаут Обработки (Минуты)
teammate.chunkProcessingTimeoutInMinutes.description=Максимальное время для обработки блоков контекста. 0 означает без таймаута.
teammate.chunkProcessingTimeoutInMinutes.instructions=Установите максимальное время обработки. Используйте 0 для отсутствия таймаута или установите разумный лимит для предотвращения долго выполняющихся заданий.

teammate.fieldName.displayName=Имя Пользовательского Поля
teammate.fieldName.description=Имя пользовательского поля для обновления ответом AI (если используется режим вывода в поле)
teammate.fieldName.instructions=Введите точное имя пользовательского поля, где должен быть сохранен ответ AI.

teammate.outputType.displayName=Тип Вывода
teammate.outputType.description=Где разместить ответ AI
teammate.outputType.instructions=Выберите, где должен быть размещен ответ AI: как комментарий, в пользовательском поле или создать новые тикеты.
teammate.outputType.comment=Комментарий к тикету
teammate.outputType.field=Обновить пользовательское поле
teammate.outputType.creation=Создать новые тикеты

teammate.operationType.displayName=Тип Операции
teammate.operationType.description=Как обрабатывать существующий контент при обновлении полей
teammate.operationType.instructions=Выберите, заменять ли существующий контент или добавлять к нему при обновлении полей.
teammate.operationType.replace=Заменить существующий контент
teammate.operationType.append=Добавить к существующему контенту

teammate.attachResponseAsFile.displayName=Прикрепить Ответ как Файл
teammate.attachResponseAsFile.description=Прикреплять ли ответ AI как файл к тикету в дополнение к комментариям
teammate.attachResponseAsFile.instructions=Включите это, чтобы сохранить ответ AI как прикрепленный файл для удобства справки и архивирования.

teammate.preJSAction.displayName=Скрипт перед действием
teammate.preJSAction.description=JavaScript код для выполнения перед обработкой AI. Может быть встроенным JavaScript, путем к ресурсу (например, 'agentFunctions/preValidation.js'), или URL GitHub. Скрипт получает параметры jobParams, ticket и initiator и имеет доступ ко всем 61 MCP инструментам (Jira, Confluence, AI и т.д.). Верните true для продолжения обработки или false для пропуска.
teammate.preJSAction.instructions=Напишите JavaScript код для выполнения перед началом обработки AI. Вы можете валидировать тикеты, проверять метки, обновлять статус или выполнять пре-проверки. Верните true для продолжения обработки AI или false для пропуска. Скрипт имеет доступ к: jobParams (конфигурация задания), ticket (данные тикета), initiator (пользователь) и всем MCP инструментам. Вы можете использовать встроенный код, загружать из ресурсов (например, 'agentFunctions/script.js') или из URL GitHub.

teammate.postJSAction.displayName=Post-Action JavaScript
teammate.postJSAction.description=JavaScript код для выполнения после обработки AI. Может быть встроенным JavaScript, путем к ресурсу (например, 'agentFunctions/postProcess.js'), или URL GitHub. Скрипт получает параметры jobParams, ticket, response и initiator и имеет доступ ко всем 61 MCP инструментам (Jira, Confluence, AI и т.д.).
teammate.postJSAction.instructions=Напишите JavaScript код для выполнения после обработки AI. Вы можете создавать тикеты, обновлять поля, публиковать комментарии или выполнять любую пользовательскую логику. Скрипт имеет доступ к: jobParams (конфигурация задания), ticket (данные тикета), response (ответ AI), initiator (пользователь) и всем MCP инструментам. Вы можете использовать встроенный код, загружать из ресурсов (например, 'agentFunctions/script.js') или из URL GitHub.

# Параметры задания Expert
expert.request.displayName=Запрос
expert.request.description=Опишите, какой анализ или экспертный совет вам нужен для выбранных тикетов
expert.request.instructions=Четко опишите, что вы хотите, чтобы AI-эксперт проанализировал или посоветовал. Будьте конкретны в отношении типа необходимого анализа.

expert.inputJql.displayName=Запрос Тикетов (JQL)
expert.inputJql.description=JQL запрос для выбора тикетов для анализа. Используйте язык запросов Jira для фильтрации тикетов по проекту, типу, статусу и т.д.
expert.inputJql.instructions=Введите валидный JQL запрос для выбора тикетов для анализа. Примеры: 'key = DMC-123', 'project = DMC AND type = Bug', 'assignee = currentUser()'

expert.initiator.displayName=ID Инициатора
expert.initiator.description=ID пользователя из трекера человека, запрашивающего анализ. Используется для уведомлений и отслеживания.
expert.initiator.instructions=Введите email адрес или ID пользователя, запрашивающего экспертный анализ.

expert.projectContext.displayName=Контекст Проекта
expert.projectContext.description=Информация о контексте проекта для помощи AI в понимании домена и требований
expert.projectContext.instructions=Предоставьте фоновую информацию о проекте, технологическом стеке и любом релевантном контексте, который поможет AI предоставить лучший анализ.

expert.systemRequest.displayName=Системный Запрос
expert.systemRequest.description=Системные инструкции, которые определяют, как AI должен подходить к анализу
expert.systemRequest.instructions=Определите роль AI и подход для этого анализа. Это задает контекст того, как эксперт должен думать и отвечать.

expert.systemRequestCommentAlias.displayName=Псевдоним Системного Запроса
expert.systemRequestCommentAlias.description=Короткий псевдоним для системного запроса для использования в комментариях и уведомлениях
expert.systemRequestCommentAlias.instructions=Предоставьте короткое, описательное имя для этого типа анализа, которое будет появляться в комментариях.

expert.preJSAction.displayName=Скрипт перед действием
expert.preJSAction.description=JavaScript код для выполнения перед экспертным анализом AI. Может быть встроенным JavaScript, путем к ресурсу (например, 'agentFunctions/preValidation.js'), или URL GitHub. Скрипт получает параметры jobParams, ticket и initiator и имеет доступ ко всем 61 MCP инструментам (Jira, Confluence, AI и т.д.). Верните true для продолжения анализа или false для пропуска.
expert.preJSAction.instructions=Напишите JavaScript код для выполнения перед началом экспертного анализа. Вы можете валидировать тикеты, проверять предварительные условия, обновлять статус или выполнять пре-проверки. Верните true для продолжения экспертного анализа или false для пропуска. Скрипт имеет доступ к: jobParams (конфигурация задания), ticket (данные тикета), initiator (пользователь) и всем MCP инструментам. Вы можете использовать встроенный код, загружать из ресурсов (например, 'agentFunctions/script.js') или из URL GitHub.

expert.postJSAction.displayName=Post-Action JavaScript
expert.postJSAction.description=JavaScript код для выполнения после экспертного анализа AI. Может быть встроенным JavaScript, путем к ресурсу (например, 'agentFunctions/expertPipeline.js'), или URL GitHub. Скрипт получает параметры jobParams, ticket, response, initiator, systemRequest и request и имеет доступ ко всем 61 MCP инструментам (Jira, Confluence, AI и т.д.).
expert.postJSAction.instructions=Напишите JavaScript код для выполнения после экспертного анализа. Вы можете создавать отчеты, обновлять поля, генерировать последующие тикеты или выполнять любую пользовательскую логику. Скрипт имеет доступ к: jobParams (конфигурация задания), ticket (данные тикета), response (результаты анализа), initiator (пользователь), systemRequest (системный контекст), request (запрос пользователя) и всем MCP инструментам. Вы можете использовать встроенный код, загружать из ресурсов (например, 'agentFunctions/script.js') или из URL GitHub.


