{
  "type": "TestCasesGenerator",
  "displayName": "AI Test Cases Generator",
  "description": "Automatically generate comprehensive test cases for tickets using AI analysis. Creates detailed test scenarios including positive, negative, and edge cases with automation scripts.",
  "displayNameKey": "job.testcasesGenerator.displayName",
  "descriptionKey": "job.testcasesGenerator.description",
  "iconUrl": "/img/jobs/testcases-icon.svg",
  "categories": ["AI", "Testing", "QA", "Automation"],
  "setupDocumentation": {
    "en": "/docs/jobs/testcases_generator_setup_en.md",
    "ru": "/docs/jobs/testcases_generator_setup_ru.md"
  },
  "executionModes": ["STANDALONE", "SERVER_MANAGED"],
  "requiredIntegrations": ["TrackerClient", "AI"],
  "optionalIntegrations": ["Documentation", "SourceCode"],
  "configParams": [
    {
      "key": "inputJql",
      "displayName": "Ticket Query (JQL)",
      "description": "JQL query to select tickets for which to generate test cases. Target stories, tasks, or bugs that need testing scenarios.",
      "displayNameKey": "testcases.inputJql.displayName",
      "descriptionKey": "testcases.inputJql.description",
      "instructionsKey": "testcases.inputJql.instructions",
      "required": true,
      "sensitive": false,
      "inputType": "text",
      "defaultValue": null,
      "validation": {
        "pattern": "^.+$"
      },
      "examples": [
        "project = DMC AND type = Story",
        "project = DMC AND type = Epic AND key = DMC-9",
        "assignee = currentUser() AND type IN (Story, Task, Bug)"
      ]
    },
    {
      "key": "initiator",
      "displayName": "Initiator Email",
      "description": "Email address of the person requesting test case generation. Used for notifications and tracking.",
      "displayNameKey": "testcases.initiator.displayName",
      "descriptionKey": "testcases.initiator.description",
      "instructionsKey": "testcases.initiator.instructions",
      "required": true,
      "sensitive": false,
      "inputType": "email",
      "defaultValue": null,
      "validation": {
        "pattern": "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$"
      },
      "examples": [
        "qa@company.com",
        "testlead@company.com",
        "automation@company.com"
      ]
    },
    {
      "key": "existingTestCasesJql",
      "displayNameKey": "testcases.existingTestCasesJql.displayName",
      "descriptionKey": "testcases.existingTestCasesJql.description",
      "instructionsKey": "testcases.existingTestCasesJql.instructions",
      "required": false,
      "sensitive": false,
      "inputType": "text",
      "defaultValue": null,
      "validation": {
        "pattern": "^.*$"
      },
      "examples": [
        "project = DMC AND type = 'Test Case'",
        "project = DMC AND type = 'Test Case' AND labels = 'automated'",
        "type = 'Test Case' AND component = 'Authentication'"
      ]
    },
    {
      "key": "testCasesPriorities",
      "displayNameKey": "testcases.testCasesPriorities.displayName",
      "descriptionKey": "testcases.testCasesPriorities.description",
      "instructionsKey": "testcases.testCasesPriorities.instructions",
      "required": false,
      "sensitive": false,
      "inputType": "text",
      "defaultValue": "High,Medium,Low",
      "validation": {
        "pattern": "^[a-zA-Z0-9,\\s]+$"
      },
      "examples": [
        "Critical,High,Medium,Low",
        "High,Medium,Low",
        "P1,P2,P3"
      ]
    },
    {
      "key": "relatedTestCasesRules",
      "displayNameKey": "testcases.relatedTestCasesRules.displayName",
      "descriptionKey": "testcases.relatedTestCasesRules.description",
      "instructionsKey": "testcases.relatedTestCasesRules.instructions",
      "required": false,
      "sensitive": false,
      "inputType": "textarea",
      "defaultValue": null,
      "validation": {
        "maxLength": 2000
      },
      "examples": [
        "Include test cases for all related user stories",
        "Generate test cases for dependent components",
        "Consider integration test scenarios"
      ]
    },
    {
      "key": "testCaseIssueType",
      "displayNameKey": "testcases.testCaseIssueType.displayName",
      "descriptionKey": "testcases.testCaseIssueType.description",
      "instructionsKey": "testcases.testCaseIssueType.instructions",
      "required": false,
      "sensitive": false,
      "inputType": "text",
      "defaultValue": "Test Case",
      "validation": {
        "pattern": "^[a-zA-Z0-9\\s]+$"
      },
      "examples": [
        "Test Case",
        "Test Scenario",
        "Manual Test"
      ]
    },
    {
      "key": "testCaseLinkRelationship",
      "displayNameKey": "testcases.testCaseLinkRelationship.displayName",
      "descriptionKey": "testcases.testCaseLinkRelationship.description",
      "instructionsKey": "testcases.testCaseLinkRelationship.instructions",
      "required": false,
      "sensitive": false,
      "inputType": "text",
      "defaultValue": "is tested by",
      "validation": {
        "pattern": "^[a-zA-Z0-9\\s]+$"
      },
      "examples": [
        "is tested by",
        "tests",
        "verifies"
      ]
    },
    {
      "key": "confluencePages",
      "displayNameKey": "testcases.confluencePages.displayName",
      "descriptionKey": "testcases.confluencePages.description",
      "instructionsKey": "testcases.confluencePages.instructions",
      "required": false,
      "sensitive": false,
      "inputType": "array",
      "defaultValue": null,
      "validation": {
        "minItems": 0,
        "maxItems": 100
      },
      "examples": [
        "https://confluence.company.com/test-strategy",
        "https://confluence.company.com/page1",
        "https://confluence.company.com/page2"
      ]
    },
    {
      "key": "isCodeAsSource",
      "displayNameKey": "testcases.isCodeAsSource.displayName",
      "descriptionKey": "testcases.isCodeAsSource.description",
      "instructionsKey": "testcases.isCodeAsSource.instructions",
      "required": false,
      "sensitive": false,
      "inputType": "boolean",
      "defaultValue": "false",
      "validation": {
        "type": "boolean"
      }
    },
    {
      "key": "isConfluenceAsSource",
      "displayNameKey": "testcases.isConfluenceAsSource.displayName",
      "descriptionKey": "testcases.isConfluenceAsSource.description",
      "instructionsKey": "testcases.isConfluenceAsSource.instructions",
      "required": false,
      "sensitive": false,
      "inputType": "boolean",
      "defaultValue": "false",
      "validation": {
        "type": "boolean"
      }
    },
    {
      "key": "isTrackerAsSource",
      "displayNameKey": "testcases.isTrackerAsSource.displayName",
      "descriptionKey": "testcases.isTrackerAsSource.description",
      "instructionsKey": "testcases.isTrackerAsSource.instructions",
      "required": false,
      "sensitive": false,
      "inputType": "boolean",
      "defaultValue": "false",
      "validation": {
        "type": "boolean"
      }
    },
    {
      "key": "transformConfluencePagesToMarkdown",
      "displayNameKey": "testcases.transformConfluencePagesToMarkdown.displayName",
      "descriptionKey": "testcases.transformConfluencePagesToMarkdown.description",
      "instructionsKey": "testcases.transformConfluencePagesToMarkdown.instructions",
      "required": false,
      "sensitive": false,
      "inputType": "boolean",
      "defaultValue": "true",
      "validation": {
        "type": "boolean"
      }
    },
    {
      "key": "ticketContextDepth",
      "displayNameKey": "testcases.ticketContextDepth.displayName",
      "descriptionKey": "testcases.ticketContextDepth.description",
      "instructionsKey": "testcases.ticketContextDepth.instructions",
      "required": false,
      "sensitive": false,
      "inputType": "number",
      "defaultValue": "1",
      "validation": {
        "min": 1,
        "max": 10
      },
      "examples": [
        "1",
        "2",
        "3"
      ]
    },
    {
      "key": "chunksProcessingTimeoutInMinutes",
      "displayNameKey": "testcases.chunksProcessingTimeoutInMinutes.displayName",
      "descriptionKey": "testcases.chunksProcessingTimeoutInMinutes.description",
      "instructionsKey": "testcases.chunksProcessingTimeoutInMinutes.instructions",
      "required": false,
      "sensitive": false,
      "inputType": "number",
      "defaultValue": "0",
      "validation": {
        "min": 0,
        "max": 120
      },
      "examples": [
        "0",
        "5",
        "10",
        "30"
      ]
    },
    {
      "key": "filesLimit",
      "displayNameKey": "testcases.filesLimit.displayName",
      "descriptionKey": "testcases.filesLimit.description",
      "instructionsKey": "testcases.filesLimit.instructions",
      "required": false,
      "sensitive": false,
      "inputType": "number",
      "defaultValue": "10",
      "validation": {
        "min": 1,
        "max": 100
      },
      "examples": [
        "5",
        "10",
        "20"
      ]
    },
    {
      "key": "confluenceLimit",
      "displayNameKey": "testcases.confluenceLimit.displayName",
      "descriptionKey": "testcases.confluenceLimit.description",
      "instructionsKey": "testcases.confluenceLimit.instructions",
      "required": false,
      "sensitive": false,
      "inputType": "number",
      "defaultValue": "10",
      "validation": {
        "min": 1,
        "max": 100
      },
      "examples": [
        "5",
        "10",
        "20"
      ]
    },
    {
      "key": "trackerLimit",
      "displayNameKey": "testcases.trackerLimit.displayName",
      "descriptionKey": "testcases.trackerLimit.description",
      "instructionsKey": "testcases.trackerLimit.instructions",
      "required": false,
      "sensitive": false,
      "inputType": "number",
      "defaultValue": "10",
      "validation": {
        "min": 1,
        "max": 100
      },
      "examples": [
        "5",
        "10",
        "20"
      ]
    },
    {
      "key": "filesIterations",
      "displayNameKey": "testcases.filesIterations.displayName",
      "descriptionKey": "testcases.filesIterations.description",
      "instructionsKey": "testcases.filesIterations.instructions",
      "required": false,
      "sensitive": false,
      "inputType": "number",
      "defaultValue": "1",
      "validation": {
        "min": 1,
        "max": 10
      },
      "examples": [
        "1",
        "2",
        "3"
      ]
    },
    {
      "key": "confluenceIterations",
      "displayNameKey": "testcases.confluenceIterations.displayName",
      "descriptionKey": "testcases.confluenceIterations.description",
      "instructionsKey": "testcases.confluenceIterations.instructions",
      "required": false,
      "sensitive": false,
      "inputType": "number",
      "defaultValue": "1",
      "validation": {
        "min": 1,
        "max": 10
      },
      "examples": [
        "1",
        "2",
        "3"
      ]
    },
    {
      "key": "trackerIterations",
      "displayNameKey": "testcases.trackerIterations.displayName",
      "descriptionKey": "testcases.trackerIterations.description",
      "instructionsKey": "testcases.trackerIterations.instructions",
      "required": false,
      "sensitive": false,
      "inputType": "number",
      "defaultValue": "1",
      "validation": {
        "min": 1,
        "max": 10
      },
      "examples": [
        "1",
        "2",
        "3"
      ]
    },
    {
      "key": "fieldName",
      "displayNameKey": "testcases.fieldName.displayName",
      "descriptionKey": "testcases.fieldName.description",
      "instructionsKey": "testcases.fieldName.instructions",
      "required": false,
      "sensitive": false,
      "inputType": "text",
      "defaultValue": null,
      "validation": {
        "pattern": "^[a-zA-Z0-9_\\s-]+$"
      },
      "examples": [
        "Test Cases",
        "Generated Tests",
        "QA Analysis"
      ]
    },
    {
      "key": "outputType",
      "displayNameKey": "testcases.outputType.displayName",
      "descriptionKey": "testcases.outputType.description",
      "instructionsKey": "testcases.outputType.instructions",
      "required": false,
      "sensitive": false,
      "inputType": "select",
      "defaultValue": "comment",
      "validation": {
        "enum": ["comment", "field", "creation"]
      },
      "options": [
        {"value": "comment", "labelKey": "testcases.outputType.comment"},
        {"value": "field", "labelKey": "testcases.outputType.field"},
        {"value": "creation", "labelKey": "testcases.outputType.creation"}
      ]
    },
    {
      "key": "operationType",
      "displayNameKey": "testcases.operationType.displayName",
      "descriptionKey": "testcases.operationType.description",
      "instructionsKey": "testcases.operationType.instructions",
      "required": false,
      "sensitive": false,
      "inputType": "select",
      "defaultValue": "Append",
      "validation": {
        "enum": ["Replace", "Append"]
      },
      "options": [
        {"value": "Replace", "labelKey": "testcases.operationType.replace"},
        {"value": "Append", "labelKey": "testcases.operationType.append"}
      ]
    }
  ]
} 