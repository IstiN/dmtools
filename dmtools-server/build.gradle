plugins {
    id 'org.springframework.boot' version '3.2.5'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'java'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}

group = 'com.github.istin.dmtools'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '21'
    targetCompatibility = '21'
}

repositories {
    mavenCentral()
}

dependencies {
    // Put jboss-logging FIRST to ensure it takes precedence in classpath
    implementation 'org.jboss.logging:jboss-logging:3.5.3.Final' // Required for Hibernate compatibility
    
    // Use regular jar instead of fat JAR by referencing compiled classes  
    implementation(project(':dmtools-core')) {
        exclude group: 'org.jboss.logging', module: 'jboss-logging'
        exclude module: 'dmtools-v1.5.26-all'
    }

    // GraalVM JS dependencies for JavaScript execution
    def graalvmVersion = '24.1.1'
    implementation "org.graalvm.sdk:graal-sdk:${graalvmVersion}"
    implementation "org.graalvm.js:js:${graalvmVersion}"
    implementation "org.graalvm.js:js-scriptengine:${graalvmVersion}"
    implementation "org.graalvm.truffle:truffle-api:${graalvmVersion}"
    implementation "org.graalvm.polyglot:polyglot:${graalvmVersion}"
    implementation('org.springframework.boot:spring-boot-starter-web') {
        exclude group: 'ch.qos.logback', module: 'logback-classic'
        exclude group: 'ch.qos.logback', module: 'logback-core'
        exclude group: 'org.apache.logging.log4j', module: 'log4j-to-slf4j'
    }
    implementation('org.springframework.boot:spring-boot-starter-actuator') {
        exclude group: 'ch.qos.logback', module: 'logback-classic'
        exclude group: 'ch.qos.logback', module: 'logback-core'
        exclude group: 'org.apache.logging.log4j', module: 'log4j-to-slf4j'
    }
    // Spring Security and OAuth2 Client dependencies
    implementation('org.springframework.boot:spring-boot-starter-security') {
        exclude group: 'ch.qos.logback', module: 'logback-classic'
        exclude group: 'ch.qos.logback', module: 'logback-core'
        exclude group: 'org.apache.logging.log4j', module: 'log4j-to-slf4j'
    }
    implementation('org.springframework.boot:spring-boot-starter-oauth2-client') {
        exclude group: 'ch.qos.logback', module: 'logback-classic'
        exclude group: 'ch.qos.logback', module: 'logback-core'
        exclude group: 'org.apache.logging.log4j', module: 'log4j-to-slf4j'
    }
    // implementation 'com.google.cloud:spring-cloud-gcp-starter-data-firestore'
    implementation('org.springframework.boot:spring-boot-starter-data-jpa') {
        exclude group: 'ch.qos.logback', module: 'logback-classic'
        exclude group: 'ch.qos.logback', module: 'logback-core'
        exclude group: 'org.apache.logging.log4j', module: 'log4j-to-slf4j'
    }
    runtimeOnly 'com.h2database:h2'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
    implementation 'com.google.api-client:google-api-client:2.0.0'
    implementation 'com.google.oauth-client:google-oauth-client-jetty:1.34.1'
    implementation('com.google.apis:google-api-services-slides:v1-rev20240305-2.0.0') {
        exclude group: 'com.google.guava'
    }

    // Use Log4j2 from dmtools-core instead of logback for Java 23 compatibility
    // The dmtools-core already provides log4j2 dependencies which are more compatible
    implementation 'org.apache.logging.log4j:log4j-slf4j2-impl:2.20.0' // SLF4J binding for Log4j2

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    
    // Test dependencies
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.junit.jupiter:junit-jupiter-api'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine'
    testImplementation 'org.mockito:mockito-core'
    testImplementation 'org.mockito:mockito-junit-jupiter'
    testRuntimeOnly 'net.bytebuddy:byte-buddy-agent:1.15.4'
}

// dependencyManagement {
//     imports {
//         mavenBom "com.google.cloud:spring-cloud-gcp-dependencies:5.2.1"
//     }
// }

configurations.all {
    resolutionStrategy {
        force 'org.jboss.logging:jboss-logging:3.5.3.Final'
        force 'io.swagger.core.v3:swagger-annotations:2.2.15'
    }
}

tasks.withType(Test) {
    useJUnitPlatform()
    enabled = false  // Temporarily disabled due to logging library compatibility issues with Java 23
}

test {
    useJUnitPlatform()
    enabled = false  // Temporarily disabled due to logging library compatibility issues with Java 23
    testLogging {
        events "passed", "skipped", "failed", "standardOut", "standardError"
        exceptionFormat "full"
    }
}

shadowJar {
    archiveBaseName.set('dmtools')
    archiveVersion.set('v' + version)
    archiveClassifier.set('all')
    archiveExtension.set('jar')
    zip64 true
    
    // Include all dependencies
    configurations = [project.configurations.runtimeClasspath]
    
    manifest {
        attributes 'Main-Class': 'com.github.istin.dmtools.job.JobRunner'
        attributes 'Implementation-Version': version
        attributes 'Implementation-Title': 'DMTools'
    }
    
    // Exclude duplicate files and problematic files
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    exclude 'META-INF/*.SF'
    exclude 'META-INF/*.DSA'
    exclude 'META-INF/*.RSA'
    
    // Move the JAR to the root build directory
    destinationDirectory = file("${project.rootDir}/build/libs")
} 