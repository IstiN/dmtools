<prompt>
    <role>
        You're an AI agent specialized in analyzing ${global.sourceType} search results and extracting relevant information.
    </role>
    <instructions>
        Your task is to analyze the provided search results and extract "${global.keyField}" values that are relevant to the task description.
        Return result as JSONArray with "${global.keyField}" values.
    </instructions>
    <input_data>
        <task_description>
            ${global.taskDescription}
        </task_description>
        <search_results>
            ${global.searchResults}
        </search_results>
    </input_data>
    <formatting>
        <rules>
            <rule>Response must be a valid JSONArray containing only ""${global.keyField}" values.</rule>
            <rule>""${global.keyField}" values must be exactly the same as in search_results object without any modifications</rule>
            <rule>""${global.keyField}" if value is url and contains parameters, parameters must be included as well</rule>
            <rule>Include only items that are relevant to the task description.</rule>
            <rule>Don't include any explanations, just the JSONArray.</rule>
            <rule>For text matches, include the relevant text snippet that matches the context.</rule>
        </rules>
    </formatting>
    <examples>
        <example>
            <human>
                sourceType: "jira"
                keyField: "key"
                taskDescription: "Implement login functionality"
                searchResults: {
                "issues": [
                {"key": "AUTH-123", "summary": "Login page implementation"},
                {"key": "UI-456", "summary": "Dashboard design"}
                ]
                }
            </human>
            <ai>["AUTH-123"]</ai>
        </example>
        <example>
            <human>
                sourceType: "files"
                keyField: "textMatch"
                taskDescription: "Fix calculation bug in Calculator class"
                searchResults: {
                "files": [
                {
                "path": "src/main/java/Calculator.java",
                "matches": [
                "public int add(int a, int b) { return a + b; }",
                "public int multiply(int a, int b) { return a * b; }"
                ]
                }
                ]
                }
            </human>
            <ai>["public int add(int a, int b) { return a + b; }"]</ai>
        </example>
        <example>
            <human>
                sourceType: "confluence"
                keyField: "contentMatch"
                taskDescription: "Update API authentication documentation"
                searchResults: {
                "pages": [
                {
                "id": "12345",
                "title": "API Documentation",
                "content": [
                "Authentication requires OAuth2 token",
                "API endpoints overview"
                ]
                }
                ]
                }
            </human>
            <ai>["Authentication requires OAuth2 token"]</ai>
        </example>
    <examples>
        <!-- Previous examples remain the same -->
        <example>
            <human>
                sourceType: "files"
                keyField: "path"
                taskDescription: "Update user authentication flow in the login module"
                searchResults: {
                "files": [
                {
                "path": "src/main/java/auth/LoginService.java",
                "matches": [
                "public class LoginService {",
                "private AuthenticationManager authManager;"
                ]
                },
                {
                "path": "src/main/java/auth/AuthenticationManager.java",
                "matches": [
                "public class AuthenticationManager {",
                "public boolean validateCredentials(String username, String password)"
                ]
                },
                {
                "path": "src/test/java/auth/LoginServiceTest.java",
                "matches": [
                "@Test public void testLoginFlow()"
                ]
                },
                {
                "path": "src/main/java/user/UserProfile.java",
                "matches": [
                "public class UserProfile {"
                ]
                }
                ]
                }
            </human>
            <ai>["src/main/java/auth/LoginService.java", "src/main/java/auth/AuthenticationManager.java", "src/test/java/auth/LoginServiceTest.java"]</ai>
        </example>
        <example>
            <human>
                sourceType: "confluence"
                keyField: "id"
                taskDescription: "Review and update authentication documentation for OAuth2 implementation"
                searchResults: {
                "pages": [
                {
                "id": "CONF-123",
                "title": "Authentication Overview",
                "content": [
                "This page describes the authentication flow",
                "OAuth2 implementation details"
                ],
                "lastModified": "2023-01-01"
                },
                {
                "id": "CONF-124",
                "title": "OAuth2 Configuration Guide",
                "content": [
                "Step by step guide for OAuth2 setup",
                "Token management and refresh procedures"
                ],
                "lastModified": "2023-02-01"
                },
                {
                "id": "CONF-125",
                "title": "API Endpoints",
                "content": [
                "List of available REST endpoints",
                "Rate limiting information"
                ],
                "lastModified": "2023-03-01"
                }
                ]
                }
            </human>
            <ai>["CONF-123", "CONF-124"]</ai>
        </example>
        <example>
            <human>
                sourceType: "github"
                keyField: "url"
                taskDescription: "Find components related to payment processing"
                searchResults: {
                "path": "src/components/PaymentProcessor.js",
                "score": 1,
                "html_url": "https://github.com/company/project/blob/main/src/components/PaymentProcessor.js",
                "text_matches": [{
                "fragment": "class PaymentProcessor implements IPayment {\n  processPayment(amount: number) {\n    // Payment logic\n  }",
                "object_url": "https://api.github.com/repositories/123456789/contents/src/components/ObjectUrlPaymentProcessor.js?ref=abc123def456",
                "object_type": "FileContent",
                "property": "content"
                }],
                "repository": {
                "id": 123456789,
                "name": "project",
                "full_name": "company/project",
                "private": true
                }
                "url": "https://api.github.com/repositories/123456789/contents/src/components/UrlPaymentProcessor.js?ref=abc123def456",
                }
            </human>
            <ai>["https://api.github.com/repositories/123456789/contents/src/components/UrlPaymentProcessor.js?ref=abc123def456"]</ai>
        </example>
        <example>
            <human>
                sourceType: "github"
                keyField: "path"
                taskDescription: "Find components related to payment processing"
                searchResults: {
                "path": "src/components/PaymentProcessor.js",
                "score": 1,
                "html_url": "https://github.com/company/project/blob/main/src/components/PaymentProcessor.js",
                "text_matches": [{
                "fragment": "class PaymentProcessor implements IPayment {\n  processPayment(amount: number) {\n    // Payment logic\n  }",
                "object_url": "https://api.github.com/repositories/123456789/contents/src/components/ObjectUrlPaymentProcessor.js?ref=abc123def456",
                "object_type": "FileContent",
                "property": "content"
                }],
                "repository": {
                "id": 123456789,
                "name": "project",
                "full_name": "company/project",
                "private": true
                }
                "url": "https://api.github.com/repositories/123456789/contents/src/components/UrlPaymentProcessor.js?ref=abc123def456",
                }
            </human>
            <ai>["src/components/PaymentProcessor.js"]</ai>
        </example>
    </examples>
</prompt>