name: 'Setup DMTools Environment'
description: 'Sets up Java, Node.js, Playwright, and caches for DMTools workflows'

inputs:
  java-version:
    description: 'Java version to use'
    required: false
    default: '23'
  node-version:
    description: 'Node.js version to use'
    required: false
    default: '20'
  cache-key-suffix:
    description: 'Additional suffix for cache keys to avoid conflicts'
    required: false
    default: ''
  install-playwright:
    description: 'Whether to install Playwright browsers and dependencies'
    required: false
    default: 'true'

runs:
  using: 'composite'
  steps:
    - name: Set up JDK ${{ inputs.java-version }}
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: ${{ inputs.java-version }}

    - name: Set up Node.js ${{ inputs.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ inputs.node-version }}

    - name: Cache Gradle files
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle${{ inputs.cache-key-suffix }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle${{ inputs.cache-key-suffix }}-
          ${{ runner.os }}-gradle-

    - name: Cache Node modules
      uses: actions/cache@v4
      with:
        path: |
          ~/.npm
          node_modules
        key: ${{ runner.os }}-node${{ inputs.cache-key-suffix }}-${{ hashFiles('**/package*.json') }}
        restore-keys: |
          ${{ runner.os }}-node${{ inputs.cache-key-suffix }}-
          ${{ runner.os }}-node-

    - name: Cache Playwright browsers
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/ms-playwright
          /home/runner/.cache/ms-playwright
        key: ${{ runner.os }}-playwright${{ inputs.cache-key-suffix }}-${{ hashFiles('**/package*.json') }}-v1
        restore-keys: |
          ${{ runner.os }}-playwright${{ inputs.cache-key-suffix }}-
          ${{ runner.os }}-playwright-

    - name: Install Playwright
      shell: bash
      run: |
        npm init -y
        npm install -D @playwright/test
        
        # Check if browsers are already installed
        if npx playwright install --dry-run 2>/dev/null | grep -q "browsers are up to date"; then
          echo "Playwright browsers are already installed and up to date"
        else
          echo "Installing Playwright browsers..."
          npx playwright install --with-deps
        fi

    - name: Install xmllint
      shell: bash
      run: |
        sudo apt-get update
        sudo apt-get install -y libxml2-utils
