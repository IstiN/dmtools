name: Build Fat JAR and Publish Package

on:
  push:
    tags:
      - 'v*.*.*'

  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 23
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '23'

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Playwright
        run: |
          npm init -y
          npm install -D @playwright/test
          npx playwright install --with-deps

      - name: Cache Gradle files
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Build with Gradle
        id: gradle
        continue-on-error: true
        run: ./gradlew clean build shadowJar publish -x integrationTest
        env:
          GITHUB_USERNAME: ${{ github.actor }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Print Failed Tests
        if: steps.gradle.outcome == 'failure'
        run: |
          echo "Failed Tests Summary:"
          if [ -f build/test-results/test/TEST-*.xml ]; then
            failed_tests=$(grep -l "failures=\"[1-9]" build/test-results/test/TEST-*.xml)
            for test_file in $failed_tests; do
              echo "Test file: $test_file"
              echo "Failed test cases:"
              grep -A 2 "<failure" "$test_file" | grep -v "<failure" | grep -v "--"
              echo "Failure messages:"
              grep -A 2 "message=" "$test_file"
              echo "----------------------------------------"
            done
          else
            echo "No test result files found"
          fi

      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: build/reports/tests/test
          retention-days: 7

      - name: Upload coverage reports to Codecov
        if: success() || steps.gradle.outcome == 'failure'
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Upload test results to Codecov
        if: success() || steps.gradle.outcome == 'failure'
        uses: codecov/test-results-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Create a Release
        id: create_release
        if: success()
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Extract Tag Name
        if: success()
        id: extract_tag
        run: echo "tag_name=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Upload Release Asset
        if: success()
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/libs/dmtools-${{ env.tag_name }}-all.jar
          asset_name: dmtools-${{ env.tag_name }}-all.jar
          asset_content_type: application/java-archive

      - name: Fail workflow if tests failed
        if: steps.gradle.outcome == 'failure'
        run: exit 1