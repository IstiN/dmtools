name: Deploy to GCP Cloud Run

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'production'
        type: choice
        options:
        - production
        - staging

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 23
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '23'

      - name: Cache Gradle files
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Build application JAR
        run: |
          ./gradlew clean :dmtools-server:bootJar -x test -x integrationTest
          ls -la dmtools-appengine.jar
        env:
          GITHUB_USERNAME: ${{ github.actor }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ vars.GCP_PROJECT_ID }}

      - name: Configure Docker to use gcloud as credential helper
        run: gcloud auth configure-docker us-central1-docker.pkg.dev

      - name: Build Docker image
        run: |
          docker build -t us-central1-docker.pkg.dev/${{ vars.GCP_PROJECT_ID }}/dmtools/dmtools:${{ github.run_number }}-${{ github.sha }} \
            --build-arg GEMINI_API_KEY="${{ secrets.GEMINI_API_KEY }}" \
            --build-arg GEMINI_DEFAULT_MODEL="${{ vars.GEMINI_DEFAULT_MODEL }}" \
            .

      - name: Push Docker image
        run: docker push us-central1-docker.pkg.dev/${{ vars.GCP_PROJECT_ID }}/dmtools/dmtools:${{ github.run_number }}-${{ github.sha }}

      - name: Debug secrets (lengths only for security)
        run: |
          echo "GEMINI_API_KEY length: ${#GEMINI_API_KEY}"
          echo "JWT_SECRET length: ${#JWT_SECRET}"
          echo "GOOGLE_CLIENT_SECRET length: ${#GOOGLE_CLIENT_SECRET}"
          echo "MICROSOFT_CLIENT_SECRET length: ${#MICROSOFT_CLIENT_SECRET}"
          echo "OAUTH_GITHUB_CLIENT_SECRET length: ${#OAUTH_GITHUB_CLIENT_SECRET}"
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
          MICROSOFT_CLIENT_SECRET: ${{ secrets.MICROSOFT_CLIENT_SECRET }}
          OAUTH_GITHUB_CLIENT_SECRET: ${{ secrets.OAUTH_GITHUB_CLIENT_SECRET }}

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy dmtools \
            --image us-central1-docker.pkg.dev/${{ vars.GCP_PROJECT_ID }}/dmtools/dmtools:${{ github.run_number }}-${{ github.sha }} \
            --platform managed \
            --region us-central1 \
            --allow-unauthenticated \
            --update-env-vars SPRING_PROFILES_ACTIVE=prod \
            --update-env-vars GEMINI_API_KEY="${{ secrets.GEMINI_API_KEY }}" \
            --update-env-vars GEMINI_DEFAULT_MODEL="${{ vars.GEMINI_DEFAULT_MODEL }}" \
            --update-env-vars JWT_SECRET="${{ secrets.JWT_SECRET }}" \
            --update-env-vars JWT_EXPIRATION=86400000 \
            --update-env-vars APP_BASE_URL=https://dmtools-431977789017.us-central1.run.app \
            --update-env-vars APP_HOST=dmtools-431977789017.us-central1.run.app \
            --update-env-vars APP_PORT=443 \
            --update-env-vars GOOGLE_CLIENT_ID=431977789017-sosq5gjk1itkc99v8d5hvvku9ptl0m91.apps.googleusercontent.com \
            --update-env-vars GOOGLE_CLIENT_SECRET="${{ secrets.GOOGLE_CLIENT_SECRET }}" \
            --update-env-vars MICROSOFT_CLIENT_ID=db21d069-3fca-4d78-a09f-b690e6473a09 \
            --update-env-vars MICROSOFT_CLIENT_SECRET="${{ secrets.MICROSOFT_CLIENT_SECRET }}" \
            --update-env-vars GITHUB_CLIENT_ID=Ov23liHniCXneJfSANF3 \
            --update-env-vars GITHUB_CLIENT_SECRET="${{ secrets.OAUTH_GITHUB_CLIENT_SECRET }}" \
            --update-env-vars SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GOOGLE_CLIENT_ID=431977789017-sosq5gjk1itkc99v8d5hvvku9ptl0m91.apps.googleusercontent.com \
            --update-env-vars SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GOOGLE_CLIENT_SECRET="${{ secrets.GOOGLE_CLIENT_SECRET }}" \
            --update-env-vars SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GOOGLE_SCOPE="openid profile email" \
            --update-env-vars SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GITHUB_CLIENT_ID=Ov23liHniCXneJfSANF3 \
            --update-env-vars SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GITHUB_CLIENT_SECRET="${{ secrets.OAUTH_GITHUB_CLIENT_SECRET }}" \
            --update-env-vars SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GITHUB_SCOPE="user:email" \
            --update-env-vars SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_MICROSOFT_CLIENT_ID=db21d069-3fca-4d78-a09f-b690e6473a09 \
            --update-env-vars SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_MICROSOFT_CLIENT_SECRET="${{ secrets.MICROSOFT_CLIENT_SECRET }}" \
            --update-env-vars SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_MICROSOFT_SCOPE="openid profile email" \
            --update-env-vars SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_MICROSOFT_AUTHORIZATION_GRANT_TYPE=authorization_code \
            --update-env-vars SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_MICROSOFT_REDIRECT_URI=https://dmtools-431977789017.us-central1.run.app/login/oauth2/code/microsoft \
            --update-env-vars SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_MICROSOFT_AUTHORIZATION_URI=https://login.microsoftonline.com/common/oauth2/v2.0/authorize \
            --update-env-vars SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_MICROSOFT_TOKEN_URI=https://login.microsoftonline.com/common/oauth2/v2.0/token \
            --update-env-vars SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_MICROSOFT_USER_INFO_URI=https://graph.microsoft.com/v1.0/me \
            --update-env-vars SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_MICROSOFT_USER_NAME_ATTRIBUTE=id \
            --memory=1Gi \
            --cpu=1 \
            --min-instances=0 \
            --max-instances=5 \
            --timeout=900 \
            --revision-suffix=github-${{ github.run_number }} \
            --project=${{ vars.GCP_PROJECT_ID }}

      - name: Clean up old revisions
        run: |
          # Get all revisions except the latest one
          OLD_REVISIONS=$(gcloud run revisions list --service=dmtools --region=us-central1 --project=${{ vars.GCP_PROJECT_ID }} --format="value(metadata.name)" --limit=10 | tail -n +2)
          
          # Delete old revisions
          for revision in $OLD_REVISIONS; do
            if [ ! -z "$revision" ]; then
              echo "Deleting old revision: $revision"
              gcloud run revisions delete $revision --region=us-central1 --project=${{ vars.GCP_PROJECT_ID }} --quiet || echo "Failed to delete $revision"
            fi
          done

      - name: Get deployment URL
        run: |
          echo "Application deployed to: https://dmtools-431977789017.us-central1.run.app"
          gcloud run services describe dmtools --region=us-central1 --project=${{ vars.GCP_PROJECT_ID }} --format="value(status.url)" 