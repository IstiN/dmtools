# Gemini CLI Implementation
name: Gemini CLI Implementation

on:
  workflow_dispatch:
    inputs:
      user_request:
        description: 'Your coding request for Gemini CLI'
        required: true
        type: string
      model:
        description: 'Gemini model to use'
        required: false
        type: choice
        default: 'gemini-2.5-flash-preview-05-20'
        options:
          - gemini-2.0-flash-exp
          - gemini-1.5-pro-latest
          - gemini-1.5-flash-latest
          - gemini-1.0-pro-latest
          - gemini-2.5-flash-preview-05-20
          - gemini-2.5-pro-latest
      pr_base_branch:
        description: 'Base branch for the pull request'
        required: false
        type: string
        default: 'main'
      enable_debug_logging:
        description: 'Enable comprehensive debug logging for Gemini CLI'
        required: false
        type: boolean
        default: true

permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  ai-implementation:
    name: AI Code Implementation
    uses: IstiN/dmtools-agentic-workflows/.github/workflows/reusable-gemini-implementation.yml@main
    with:
      user_request: ${{ inputs.user_request }}
      model: ${{ inputs.model }}
      pr_base_branch: ${{ inputs.pr_base_branch }}
      enable_debug_logging: ${{ inputs.enable_debug_logging }}
      
      # DMTools-specific rules and context (all rules except jira-admin)
      additional_context_files: '.cursor/rules/agents-jobs.mdc,.cursor/rules/core-server-separation.mdc,.cursor/rules/dagger-dependency-injection.mdc,.cursor/rules/gradle-dependencies.mdc,.cursor/rules/java-coding-style.mdc,.cursor/rules/networking-tools.mdc,.cursor/rules/testing-context.mdc,.cursor/rules/unit-testing.mdc'
      
      # Use specific version for stability
      workflows_repo: 'IstiN/dmtools-agentic-workflows'
      workflows_ref: 'main'
      
    secrets:
      GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
      PAT_TOKEN: ${{ secrets.PAT_TOKEN }}
