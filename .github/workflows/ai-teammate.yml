name: AI Teammate

on:
  workflow_dispatch:
    inputs:
      config_file:
        description: 'Path to config'
        required: true
      encoded_config:
        description: 'Encoded or JSON Agent Config'
        required: false

permissions:
  contents: write
  pull-requests: write
  actions: read
  
jobs:
  cursor-agent:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Java Environment
      uses: ./.github/actions/setup-java-only
      with:
        cache-key-suffix: '-cursor'

    - name: Install Cursor CLI
      run: |
        curl https://cursor.com/install -fsS | bash
        echo "$HOME/.cursor/bin" >> $GITHUB_PATH

    - name: Install DMTools CLI
      run: |
        curl -fsSL https://github.com/IstiN/dmtools/releases/latest/download/install.sh | bash
        echo "$HOME/.dmtools/bin" >> $GITHUB_PATH

    - name: Run AI Teammate
      env:
        CURSOR_API_KEY: ${{ secrets.CURSOR_API_KEY }}
        USER_REQUEST: ${{ inputs.user_request }}
        MODEL: sonnet-4
        AGENT_DISABLE_WATCHDOG: "1"
        # Jira Configuration
        JIRA_EMAIL: ${{ secrets.JIRA_EMAIL }}
        JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}
        JIRA_BASE_PATH: ${{ vars.JIRA_BASE_PATH }}
        JIRA_AUTH_TYPE: ${{ vars.JIRA_AUTH_TYPE }}

        # Confluence Configuration
        CONFLUENCE_EMAIL: ${{ secrets.JIRA_EMAIL }}
        CONFLUENCE_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}
        CONFLUENCE_BASE_PATH: ${{ vars.CONFLUENCE_BASE_PATH }}
        CONFLUENCE_DEFAULT_SPACE: ${{ vars.CONFLUENCE_DEFAULT_SPACE }}
        CONFLUENCE_GRAPHQL_PATH: ${{ vars.CONFLUENCE_GRAPHQL_PATH }}

        # DMTools Integration Settings
        DMTOOLS_INTEGRATIONS: "jira,confluence,figma,ai"

        # Gemini Key
        GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        GEMINI_DEFAULT_MODEL: gemini-2.5-pro-latest
        GEMINI_BASE_PATH: https://generativelanguage.googleapis.com/v1beta/models

        #figma
        FIGMA_TOKEN: ${{ secrets.FIGMA_TOKEN }}
        FIGMA_BASE_PATH: ${{ vars.FIGMA_BASE_PATH }}

      run: dmtools run ${{ inputs.config_file }} ${{ inputs.encoded_config }}
    
    - name: Print Response to Summary
      if: always()
      run: |
        if [ -f outputs/response.md ]; then
          echo "## 🤖 Cursor Agent Response" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          cat outputs/response.md >> $GITHUB_STEP_SUMMARY
        else
          echo "## ❌ No Response Generated" >> $GITHUB_STEP_SUMMARY
          echo "The cursor agent did not generate a response file at outputs/response.md" >> $GITHUB_STEP_SUMMARY
        fi
        
    - name: Upload Agent Response
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: cursor-agent-response
        path: outputs/response.md
        retention-days: 30
        if-no-files-found: warn
        
    - name: Upload Additional Results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: cursor-agent-logs
        path: |
          **/*.log
          **/*.txt
          **/*.json
          outputs/
        retention-days: 7
        if-no-files-found: ignore
