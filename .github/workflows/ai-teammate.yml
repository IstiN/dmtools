name: AI Teammate

on:
  workflow_dispatch:
    inputs:
      config_file:
        description: 'Path to config'
        required: true
      encoded_config:
        description: 'Encoded or JSON Agent Config'
        required: false

permissions:
  contents: write
  pull-requests: write
  actions: read
  
jobs:
  cursor-agent:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Java Environment
      uses: ./.github/actions/setup-java-only
      with:
        cache-key-suffix: '-cursor'

    - name: Install Cursor CLI
      run: |
        echo "Installing Cursor CLI..."
        curl https://cursor.com/install -fsS | bash
        
        echo "Checking installation locations..."
        ls -la "$HOME/.cursor/" || echo "No .cursor directory"
        ls -la "$HOME/.cursor/bin/" || echo "No .cursor/bin directory"
        ls -la "$HOME/.local/bin/" || echo "No .local/bin directory"
        
        # Cursor CLI installs to ~/.local/bin, not ~/.cursor/bin
        echo "$HOME/.local/bin" >> $GITHUB_PATH
        
        # Test installation
        export PATH="$HOME/.local/bin:$PATH"
        if command -v cursor-agent; then
          echo "✅ cursor-agent found at: $(command -v cursor-agent)"
          cursor-agent --version 2>&1 || echo "Version check failed"
        else
          echo "❌ cursor-agent not found after installation"
          echo "Available files in .local/bin:"
          ls -la "$HOME/.local/bin/" 2>/dev/null || echo "Directory does not exist"
        fi

    - name: Install DMTools CLI
      run: |
        curl -fsSL https://github.com/IstiN/dmtools/releases/latest/download/install.sh | bash
        echo "$HOME/.dmtools/bin" >> $GITHUB_PATH

    - name: Build and Install DMTools CLI from source
      run: |
        dmtools || echo "dmtools version failed"
        cursor-agent --version || echo "dmtools version failed"

    - name: Run AI Teammate
      env:
        CURSOR_API_KEY: ${{ secrets.CURSOR_API_KEY }}
        MODEL: sonnet-4
        AGENT_DISABLE_WATCHDOG: "1"
        PATH: "/home/runner/.local/bin:/home/runner/.dmtools/bin:/bin:/usr/bin:$PATH"
        # Jira Configuration
        JIRA_EMAIL: ${{ secrets.JIRA_EMAIL }}
        JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}
        JIRA_BASE_PATH: ${{ vars.JIRA_BASE_PATH }}
        JIRA_AUTH_TYPE: ${{ vars.JIRA_AUTH_TYPE }}

        # Confluence Configuration
        CONFLUENCE_EMAIL: ${{ secrets.JIRA_EMAIL }}
        CONFLUENCE_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}
        CONFLUENCE_BASE_PATH: ${{ vars.CONFLUENCE_BASE_PATH }}
        CONFLUENCE_DEFAULT_SPACE: ${{ vars.CONFLUENCE_DEFAULT_SPACE }}
        CONFLUENCE_GRAPHQL_PATH: ${{ vars.CONFLUENCE_GRAPHQL_PATH }}

        # DMTools Integration Settings
        DMTOOLS_INTEGRATIONS: "jira,confluence,figma,ai"

        # AI Service Configuration
        GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        
        # Figma Configuration
        FIGMA_TOKEN: ${{ secrets.FIGMA_TOKEN }}
        FIGMA_BASE_PATH: ${{ vars.FIGMA_BASE_PATH }}
        ENCODED_CONFIG: ${{ inputs.encoded_config }}

      run: |
        echo "Using configuration: ${{ inputs.config_file }}"
        if [ -n "${ENCODED_CONFIG}" ]; then
          echo "Encoded config received (raw):"
          printf '%s\n' "${ENCODED_CONFIG}"
          dmtools run "${{ inputs.config_file }}" "${ENCODED_CONFIG}"
        else
          echo "No encoded config provided."
          dmtools run "${{ inputs.config_file }}"
        fi