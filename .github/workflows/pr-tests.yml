name: PR Tests and Quality Checks

on:
  pull_request:
    branches: [ main, develop ]
    types: [ opened, synchronize, reopened, ready_for_review ]
  pull_request_target:
    branches: [ main, develop ]
    types: [ opened, synchronize, reopened, ready_for_review ]

jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read
      checks: write # Required for test reporting
      pull-requests: write # Required for PR comments

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          # For pull_request_target, we need to checkout the PR head
          ref: ${{ github.event.pull_request.head.sha || github.ref }}
          fetch-depth: 0

      - name: Setup DMTools Environment
        uses: ./.github/actions/setup-environment
        with:
          cache-key-suffix: '-pr'

      - name: Run tests and build
        id: gradle
        continue-on-error: true
        run: ./gradlew clean build :dmtools-core:shadowJar -x integrationTest
        env:
          GITHUB_USERNAME: ${{ github.actor }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Run Playwright API tests
        id: playwright
        continue-on-error: true
        run: |
          cd playwright-api-tests && npx playwright test
        env:
          CI: true

      - name: Test Report
        uses: dorny/test-reporter@v1
        if: always()
        with:
          name: JUnit Tests
          path: '**/build/test-results/test/TEST-*.xml'
          reporter: java-junit
          fail-on-error: false # Don't fail here, we'll handle it later

      - name: Print Failed Tests
        if: steps.gradle.outcome == 'failure'
        run: |
          echo "## 🚨 Failed Tests Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          failed_found=false
          find . -path "*/build/test-results/test/TEST-*.xml" -type f | while read -r test_file; do
            if grep -q 'failures="[1-9]' "$test_file" || grep -q 'errors="[1-9]' "$test_file"; then
              failed_found=true
              echo "### Test file: $test_file" >> $GITHUB_STEP_SUMMARY
              echo "" >> $GITHUB_STEP_SUMMARY
              
              class_name=$(xmllint --xpath "string(//testsuite/@name)" "$test_file" 2>/dev/null || echo "Unknown")
              echo "**Class**: $class_name" >> $GITHUB_STEP_SUMMARY
              echo "" >> $GITHUB_STEP_SUMMARY
              
              echo "**Failed methods**:" >> $GITHUB_STEP_SUMMARY
              xmllint --xpath "//testcase[failure or error]/@name" "$test_file" 2>/dev/null | tr ' ' '\n' | sed 's/name=//g' | sed 's/"//g' | sed 's/^/- /' >> $GITHUB_STEP_SUMMARY || echo "- Could not extract method names" >> $GITHUB_STEP_SUMMARY
              echo "" >> $GITHUB_STEP_SUMMARY
              
              echo "**Failure details**:" >> $GITHUB_STEP_SUMMARY
              echo '```' >> $GITHUB_STEP_SUMMARY
              xmllint --xpath "//failure/text() | //error/text()" "$test_file" 2>/dev/null >> $GITHUB_STEP_SUMMARY || echo "Could not extract failure details" >> $GITHUB_STEP_SUMMARY
              echo '```' >> $GITHUB_STEP_SUMMARY
              echo "" >> $GITHUB_STEP_SUMMARY
            fi
          done
          
          test_file_count=$(find . -path "*/build/test-results/test/TEST-*.xml" -type f | wc -l)
          echo "**Total test result files found**: $test_file_count" >> $GITHUB_STEP_SUMMARY

      - name: Print Playwright Test Results
        if: steps.playwright.outcome == 'failure'
        run: |
          echo "## 🎭 Playwright Test Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Playwright tests failed. Check the test results for details." >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # Try to get playwright results if available
          if [ -f "playwright-api-tests/playwright-report/index.html" ]; then
            echo "Playwright report generated at: playwright-api-tests/playwright-report/index.html" >> $GITHUB_STEP_SUMMARY
          fi

      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-pr-${{ github.event.number }}
          path: |
            build/reports/tests/test
            build/test-results/test
            dmtools-core/build/reports/tests/test
            dmtools-core/build/test-results/test
            dmtools-server/build/reports/tests/test
            dmtools-server/build/test-results/test
            playwright-api-tests/playwright-report
            playwright-api-tests/test-results
          retention-days: 7

      - name: Upload coverage reports to Codecov
        if: success() || steps.gradle.outcome == 'failure'
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Upload test results to Codecov
        if: success() || steps.gradle.outcome == 'failure'
        uses: codecov/test-results-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Comment PR with test results
        if: always() && github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const gradleSuccess = '${{ steps.gradle.outcome }}' === 'success';
            const playwrightSuccess = '${{ steps.playwright.outcome }}' === 'success';
            
            let comment = '## 🧪 Test Results\n\n';
            
            if (gradleSuccess && playwrightSuccess) {
              comment += '✅ **All tests passed!**\n\n';
              comment += '- ✅ Gradle tests: PASSED\n';
              comment += '- ✅ Playwright tests: PASSED\n';
            } else {
              comment += '❌ **Some tests failed**\n\n';
              comment += `- ${gradleSuccess ? '✅' : '❌'} Gradle tests: ${gradleSuccess ? 'PASSED' : 'FAILED'}\n`;
              comment += `- ${playwrightSuccess ? '✅' : '❌'} Playwright tests: ${playwrightSuccess ? 'PASSED' : 'FAILED'}\n`;
              comment += '\n📋 Check the workflow run for detailed test results and artifacts.\n';
            }
            
            comment += '\n🔗 [View full test results](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})';
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

      - name: Set final status
        if: always()
        run: |
          echo "## 📊 Final Test Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ steps.gradle.outcome }}" = "success" ] && [ "${{ steps.playwright.outcome }}" = "success" ]; then
            echo "✅ **All tests passed successfully!**" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "The PR is ready for review." >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **Some tests failed**" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "Please fix the failing tests before merging." >> $GITHUB_STEP_SUMMARY
            
            # Fail the workflow if any tests failed
            if [ "${{ steps.gradle.outcome }}" = "failure" ] || [ "${{ steps.playwright.outcome }}" = "failure" ]; then
              exit 1
            fi
          fi
