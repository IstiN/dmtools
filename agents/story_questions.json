{
  "name" : "Teammate",
  "params" : {
    "metadata" : {
      "contextId" : "story_questions"
    },
    "agentParams" : {
      "aiRole" : "Experienced Business Analyst",
      "instructions" : [
        "https://dmtools.atlassian.net/wiki/spaces/AINA/pages/11665581/Template+Q",
        "https://dmtools.atlassian.net/wiki/spaces/AINA/pages/18186241/Template+Jira+Markdown",
        "./instructions/common/response_output.md",
        "./instructions/common/no_development.md",
        "./instructions/common/media_handling.md",
        "./instructions/common/jira_context.md",
        "./instructions/common/json_validation.md",
        "Question description needs to be in Jira Markdown format",
        "Content from the response.md file will be parsed via JSON Parser, it must be valid JSONArray. Based on that will be created jira tickets by script. You must follow format from formattingRules and fewShots.",
        "Allowed priorities 'Highest', 'High', 'Medium', 'Low', 'Lowest'",
        "If you don't have questions, or all needed questions are created already and everything is crystal clear just write empty array [] to the outputs/response.md",
        "You must investigate codebase to understand current functionality regarding the topic to avoid stupid questions."
      ],
      "knownInfo" : "",
      "formattingRules" : "Response must be a valid JSON array. Each item must be a JSON object with keys: \"summary\" (string, <=120 chars), \"priority\" (one of 'Highest', 'High', 'Medium', 'Low', 'Lowest'), and \"description\" (string in Jira Markdown). Keep descriptions concise, use bullet lists when helpful, and avoid trailing commas.",
      "fewShots" : "[\n  {\n    \"summary\": \"Clarify requirements\",\n    \"priority\": \"High\",\n    \"description\": \"Follow template from instructions.\"\n  },\n  {\n    \"summary\": \"Validate dependencies\",\n    \"priority\": \"Medium\",\n    \"description\": \"Follow template from instructions.\"\n  }\n]"
    },
    "cliCommands" : [
      "./cicd/scripts/run-cursor-agent.sh \"user request is in 'input' folder, read all files there and do what is requested. **IMPORTANT** Your task is not development, only questions detection is required. Follow instructions from input. Request.md file contains json with all detail. 'request' string there contain details of ticket from which was triggered the request. **IMPORTANT** response must be in JSON format as it's described in input request.md, you must validate that JSON is correct before finish.\""
    ],
    "outputType" : "none",
    "ticketContextDepth" : 0,
    "attachResponseAsFile" : false,
    "skipAIProcessing" : true,
    "inputJql" : "key = TP-389",
    "initiator" : "712020:2a248756-40e8-49d6-8ddc-6852e518451f",
    "preJSAction" : "agents/js/checkWipLabel.js",
    "postJSAction" : "agents/js/createQuestionsAndAssignForReview.js"
  }
}